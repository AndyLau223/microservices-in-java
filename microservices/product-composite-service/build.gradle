plugins {
//	java plugin adds the Java compiler to the project
    id 'java'
//	ensure that Gradle will build a fat JAR file and specify Spring Boot version
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'se.magnus.microservices.composite.product'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = "2020.0.2"
    resilience4jVersion = "1.7.0"
}
dependencies {
    implementation project(':api')
    implementation project(':util')


    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.5.2'
    implementation 'org.springdoc:springdoc-openapi-common:1.5.2'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.retry:spring-retry'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose'

    implementation "io.github.resilience4j:resilience4j-spring-boot2:${resilience4jVersion}"
    implementation "io.github.resilience4j:resilience4j-reactor:${resilience4jVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-stream::test-binder'
    testImplementation 'io.projectreactor:reactor-test'
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }

    dependencies {
//        Specify the version we'd like to use, this is to avoid Spring Cloud override the version number.
        dependency "io.github.resilience4j:resilience4j-spring:${resilience4jVersion}"
        dependency "io.github.resilience4j:resilience4j-annotations:${resilience4jVersion}"
        dependency "io.github.resilience4j:resilience4j-consumer:${resilience4jVersion}"
        dependency "io.github.resilience4j:resilience4j-core:${resilience4jVersion}"
        dependency "io.github.resilience4j:resilience4j-circuitbreaker:${resilience4jVersion}"
        dependency "io.github.resilience4j:resilience4j-ratelimiter:${resilience4jVersion}"
        dependency "io.github.resilience4j:resilience4j-retry:${resilience4jVersion}"
        dependency "io.github.resilience4j:resilience4j-bulkhead:${resilience4jVersion}"
        dependency "io.github.resilience4j:resilience4j-timelimiter:${resilience4jVersion}"
        dependency "io.github.resilience4j:resilience4j-micrometer:${resilience4jVersion}"
        dependency "io.github.resilience4j:resilience4j-circularbuffer:${resilience4jVersion}"
    }
}
tasks.named('test') {
//	JUnit is configured to be used to run our tests on Gradle builds.
    useJUnitPlatform()
}

jar {
    enabled = false
}